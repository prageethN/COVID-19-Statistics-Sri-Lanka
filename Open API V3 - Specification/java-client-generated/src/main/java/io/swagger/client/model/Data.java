/*
 * Sri Lanka HPB Covid-19 Report API
 * API provides the current real time situation of the COVID-19 patients reported in Sri Lanka
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.HospitalData;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Data
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-22T10:59:48.673Z[GMT]")
public class Data {
  @SerializedName("update_date_time")
  private String updateDateTime = null;

  @SerializedName("local_new_cases")
  private Integer localNewCases = null;

  @SerializedName("local_total_cases")
  private Integer localTotalCases = null;

  @SerializedName("local_total_number_of_individuals_in_hospitals")
  private Integer localTotalNumberOfIndividualsInHospitals = null;

  @SerializedName("local_deaths")
  private Integer localDeaths = null;

  @SerializedName("local_new_deaths")
  private Integer localNewDeaths = null;

  @SerializedName("local_recovered")
  private Integer localRecovered = null;

  @SerializedName("global_new_cases")
  private Integer globalNewCases = null;

  @SerializedName("global_total_cases")
  private Integer globalTotalCases = null;

  @SerializedName("global_deaths")
  private Integer globalDeaths = null;

  @SerializedName("global_new_deaths")
  private Integer globalNewDeaths = null;

  @SerializedName("global_recovered")
  private Integer globalRecovered = null;

  @SerializedName("hospital_data")
  private List<HospitalData> hospitalData = null;

  public Data updateDateTime(String updateDateTime) {
    this.updateDateTime = updateDateTime;
    return this;
  }

   /**
   * Get updateDateTime
   * @return updateDateTime
  **/
  @Schema(example = "2020-03-22 11:39:58", description = "")
  public String getUpdateDateTime() {
    return updateDateTime;
  }

  public void setUpdateDateTime(String updateDateTime) {
    this.updateDateTime = updateDateTime;
  }

  public Data localNewCases(Integer localNewCases) {
    this.localNewCases = localNewCases;
    return this;
  }

   /**
   * Get localNewCases
   * @return localNewCases
  **/
  @Schema(example = "2", description = "")
  public Integer getLocalNewCases() {
    return localNewCases;
  }

  public void setLocalNewCases(Integer localNewCases) {
    this.localNewCases = localNewCases;
  }

  public Data localTotalCases(Integer localTotalCases) {
    this.localTotalCases = localTotalCases;
    return this;
  }

   /**
   * Get localTotalCases
   * @return localTotalCases
  **/
  @Schema(example = "10", description = "")
  public Integer getLocalTotalCases() {
    return localTotalCases;
  }

  public void setLocalTotalCases(Integer localTotalCases) {
    this.localTotalCases = localTotalCases;
  }

  public Data localTotalNumberOfIndividualsInHospitals(Integer localTotalNumberOfIndividualsInHospitals) {
    this.localTotalNumberOfIndividualsInHospitals = localTotalNumberOfIndividualsInHospitals;
    return this;
  }

   /**
   * Get localTotalNumberOfIndividualsInHospitals
   * @return localTotalNumberOfIndividualsInHospitals
  **/
  @Schema(example = "10", description = "")
  public Integer getLocalTotalNumberOfIndividualsInHospitals() {
    return localTotalNumberOfIndividualsInHospitals;
  }

  public void setLocalTotalNumberOfIndividualsInHospitals(Integer localTotalNumberOfIndividualsInHospitals) {
    this.localTotalNumberOfIndividualsInHospitals = localTotalNumberOfIndividualsInHospitals;
  }

  public Data localDeaths(Integer localDeaths) {
    this.localDeaths = localDeaths;
    return this;
  }

   /**
   * Get localDeaths
   * @return localDeaths
  **/
  @Schema(example = "0", description = "")
  public Integer getLocalDeaths() {
    return localDeaths;
  }

  public void setLocalDeaths(Integer localDeaths) {
    this.localDeaths = localDeaths;
  }

  public Data localNewDeaths(Integer localNewDeaths) {
    this.localNewDeaths = localNewDeaths;
    return this;
  }

   /**
   * Get localNewDeaths
   * @return localNewDeaths
  **/
  @Schema(example = "0", description = "")
  public Integer getLocalNewDeaths() {
    return localNewDeaths;
  }

  public void setLocalNewDeaths(Integer localNewDeaths) {
    this.localNewDeaths = localNewDeaths;
  }

  public Data localRecovered(Integer localRecovered) {
    this.localRecovered = localRecovered;
    return this;
  }

   /**
   * Get localRecovered
   * @return localRecovered
  **/
  @Schema(example = "0", description = "")
  public Integer getLocalRecovered() {
    return localRecovered;
  }

  public void setLocalRecovered(Integer localRecovered) {
    this.localRecovered = localRecovered;
  }

  public Data globalNewCases(Integer globalNewCases) {
    this.globalNewCases = globalNewCases;
    return this;
  }

   /**
   * Get globalNewCases
   * @return globalNewCases
  **/
  @Schema(example = "0", description = "")
  public Integer getGlobalNewCases() {
    return globalNewCases;
  }

  public void setGlobalNewCases(Integer globalNewCases) {
    this.globalNewCases = globalNewCases;
  }

  public Data globalTotalCases(Integer globalTotalCases) {
    this.globalTotalCases = globalTotalCases;
    return this;
  }

   /**
   * Get globalTotalCases
   * @return globalTotalCases
  **/
  @Schema(example = "0", description = "")
  public Integer getGlobalTotalCases() {
    return globalTotalCases;
  }

  public void setGlobalTotalCases(Integer globalTotalCases) {
    this.globalTotalCases = globalTotalCases;
  }

  public Data globalDeaths(Integer globalDeaths) {
    this.globalDeaths = globalDeaths;
    return this;
  }

   /**
   * Get globalDeaths
   * @return globalDeaths
  **/
  @Schema(example = "0", description = "")
  public Integer getGlobalDeaths() {
    return globalDeaths;
  }

  public void setGlobalDeaths(Integer globalDeaths) {
    this.globalDeaths = globalDeaths;
  }

  public Data globalNewDeaths(Integer globalNewDeaths) {
    this.globalNewDeaths = globalNewDeaths;
    return this;
  }

   /**
   * Get globalNewDeaths
   * @return globalNewDeaths
  **/
  @Schema(example = "0", description = "")
  public Integer getGlobalNewDeaths() {
    return globalNewDeaths;
  }

  public void setGlobalNewDeaths(Integer globalNewDeaths) {
    this.globalNewDeaths = globalNewDeaths;
  }

  public Data globalRecovered(Integer globalRecovered) {
    this.globalRecovered = globalRecovered;
    return this;
  }

   /**
   * Get globalRecovered
   * @return globalRecovered
  **/
  @Schema(example = "0", description = "")
  public Integer getGlobalRecovered() {
    return globalRecovered;
  }

  public void setGlobalRecovered(Integer globalRecovered) {
    this.globalRecovered = globalRecovered;
  }

  public Data hospitalData(List<HospitalData> hospitalData) {
    this.hospitalData = hospitalData;
    return this;
  }

  public Data addHospitalDataItem(HospitalData hospitalDataItem) {
    if (this.hospitalData == null) {
      this.hospitalData = new ArrayList<HospitalData>();
    }
    this.hospitalData.add(hospitalDataItem);
    return this;
  }

   /**
   * Get hospitalData
   * @return hospitalData
  **/
  @Schema(description = "")
  public List<HospitalData> getHospitalData() {
    return hospitalData;
  }

  public void setHospitalData(List<HospitalData> hospitalData) {
    this.hospitalData = hospitalData;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Data data = (Data) o;
    return Objects.equals(this.updateDateTime, data.updateDateTime) &&
        Objects.equals(this.localNewCases, data.localNewCases) &&
        Objects.equals(this.localTotalCases, data.localTotalCases) &&
        Objects.equals(this.localTotalNumberOfIndividualsInHospitals, data.localTotalNumberOfIndividualsInHospitals) &&
        Objects.equals(this.localDeaths, data.localDeaths) &&
        Objects.equals(this.localNewDeaths, data.localNewDeaths) &&
        Objects.equals(this.localRecovered, data.localRecovered) &&
        Objects.equals(this.globalNewCases, data.globalNewCases) &&
        Objects.equals(this.globalTotalCases, data.globalTotalCases) &&
        Objects.equals(this.globalDeaths, data.globalDeaths) &&
        Objects.equals(this.globalNewDeaths, data.globalNewDeaths) &&
        Objects.equals(this.globalRecovered, data.globalRecovered) &&
        Objects.equals(this.hospitalData, data.hospitalData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(updateDateTime, localNewCases, localTotalCases, localTotalNumberOfIndividualsInHospitals, localDeaths, localNewDeaths, localRecovered, globalNewCases, globalTotalCases, globalDeaths, globalNewDeaths, globalRecovered, hospitalData);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Data {\n");
    
    sb.append("    updateDateTime: ").append(toIndentedString(updateDateTime)).append("\n");
    sb.append("    localNewCases: ").append(toIndentedString(localNewCases)).append("\n");
    sb.append("    localTotalCases: ").append(toIndentedString(localTotalCases)).append("\n");
    sb.append("    localTotalNumberOfIndividualsInHospitals: ").append(toIndentedString(localTotalNumberOfIndividualsInHospitals)).append("\n");
    sb.append("    localDeaths: ").append(toIndentedString(localDeaths)).append("\n");
    sb.append("    localNewDeaths: ").append(toIndentedString(localNewDeaths)).append("\n");
    sb.append("    localRecovered: ").append(toIndentedString(localRecovered)).append("\n");
    sb.append("    globalNewCases: ").append(toIndentedString(globalNewCases)).append("\n");
    sb.append("    globalTotalCases: ").append(toIndentedString(globalTotalCases)).append("\n");
    sb.append("    globalDeaths: ").append(toIndentedString(globalDeaths)).append("\n");
    sb.append("    globalNewDeaths: ").append(toIndentedString(globalNewDeaths)).append("\n");
    sb.append("    globalRecovered: ").append(toIndentedString(globalRecovered)).append("\n");
    sb.append("    hospitalData: ").append(toIndentedString(hospitalData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
